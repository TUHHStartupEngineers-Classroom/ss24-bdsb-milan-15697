{
  "hash": "91ebb38684c92f37b77b477ffc40ea88",
  "result": {
    "markdown": "---\ntitle: \"Data Wrangling\"\nauthor: \"**Milan Bhardwaj**, *Matr. Nr. 562289*\"\n---\n\n\n::: callout-note\nData set in use- 2014 (reduced).\n:::\n\n# Preparation\n\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-1_fde7bf0b13de5137a8b42be2adb87b61'}\n\n```{.r .cell-code}\n#Step 1 Packages\n\nlibrary(httr)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(jsonlite)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'jsonlite'\n#> \n#> The following object is masked from 'package:purrr':\n#> \n#>     flatten\n```\n:::\n\n```{.r .cell-code}\nlibrary(vroom)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'vroom'\n#> \n#> The following objects are masked from 'package:readr':\n#> \n#>     as.col_spec, col_character, col_date, col_datetime, col_double,\n#>     col_factor, col_guess, col_integer, col_logical, col_number,\n#>     col_skip, col_time, cols, cols_condense, cols_only, date_names,\n#>     date_names_lang, date_names_langs, default_locale, fwf_cols,\n#>     fwf_empty, fwf_positions, fwf_widths, locale, output_column,\n#>     problems, spec\n```\n:::\n\n```{.r .cell-code}\n#Step 2 Importing Data\n\ncol_types <- list(\n  id = col_character(),\n  type = col_character(),\n  number = col_character(),\n  country = col_character(),\n  date = col_date(\"%Y-%m-%d\"),\n  abstract = col_character(),\n  title = col_character(),\n  kind = col_character(),\n  num_claims = col_double(),\n  filename = col_character(),\n  withdrawn = col_double()\n)\n\npatent_tbl <- vroom(\n      file       = \"data/patent.tsv\", \n      delim      = \"\\t\", \n      col_types  = col_types,\n      na         = c(\"\", \"NA\", \"NULL\")\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: The following named parsers don't match the column names: type,\n#> number, country, abstract, title, kind, filename, withdrawn\n```\n:::\n\n```{.r .cell-code}\npatent_assignee <- vroom(\n  file = \"data/patent_assignee.tsv\",\n  delim = \"\\t\",\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 315910 Columns: 2\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \"\\t\"\n#> chr (2): patent_id, assignee_id\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nassignee <- vroom(\n  file = \"data/assignee.tsv\",\n  delim = \"\\t\",\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 47011 Columns: 3\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \"\\t\"\n#> chr (2): id, organization\n#> dbl (1): type\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nuspc <- vroom(\n  file = \"data/uspc.tsv\",\n  delim = \"\\t\",\n  col_types = list(\n    patent_id = col_character()\n  ),\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n\n#Step 3 combining tables together\n\nfinal_data <- left_join(patent_tbl, patent_assignee, by = c(\"id\" = \"patent_id\"))\nfinal_data <- left_join(final_data, assignee, by = c(\"assignee_id\" = \"id\")) \n```\n:::\n\n\n\n# Question 1- Patent Dominance: The 10 US companies with the most (assigned) patents\n\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-2_1c294b96f2e6eef55f332e6a44befe43'}\n\n```{.r .cell-code}\npatent_claims <- final_data %>% \n  select(organization, num_claims) %>% \n  group_by(organization) %>% \n  summarise(claims = sum(num_claims))\n\n# cleaning a bit\npatent_claims <- patent_claims[patent_claims$organization != 'NA',]\n# Ordering by highest\npatent_claims <- patent_claims[order(patent_claims$claims,decreasing=TRUE),]\n```\n:::\n\n\n### Creating the Chart\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-3_c8feaed9ee813614faaee9f02c068ebd'}\n\n```{.r .cell-code}\nhead(patent_claims, n=10)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"organization\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"claims\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"International Business Machines Corporation\",\"2\":\"122231\"},{\"1\":\"Samsung Electronics Co., Ltd.\",\"2\":\"91821\"},{\"1\":\"QUALCOMM Incorporated\",\"2\":\"87814\"},{\"1\":\"Google Inc.\",\"2\":\"54881\"},{\"1\":\"Microsoft Corporation\",\"2\":\"53989\"},{\"1\":\"Canon Kabushiki Kaisha\",\"2\":\"51319\"},{\"1\":\"Sony Corporation\",\"2\":\"47985\"},{\"1\":\"Apple Inc.\",\"2\":\"44339\"},{\"1\":\"Kabushiki Kaisha Toshiba\",\"2\":\"36149\"},{\"1\":\"General Electric Company\",\"2\":\"32531\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n# Question 2- Recent patent activity: The top 10 companies with the most new granted patents for August 2014\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-4_1eb01838a45c26a1d8204a840876bab7'}\n\n```{.r .cell-code}\npatents_2014_august <- final_data[format.Date(final_data$date, \"%m\")==\"08\" & !is.na(final_data$date),] %>% \n  select(organization, num_claims) %>% \n  group_by(organization) %>% \n  summarise(claims = sum(num_claims))\n\n# cleaning a bit\npatents_2014_august <- patents_2014_august[patents_2014_august$organization != 'NA',]\n# Ordering by highest\npatents_2014_august <- patents_2014_august[order(patents_2014_august$claims,decreasing=TRUE),]\n```\n:::\n\n\n### Creating the Chart\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-5_bc8976e545e245fcdff66539a3c4f9ca'}\n\n```{.r .cell-code}\nhead(patents_2014_august,n=10)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"organization\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"claims\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"International Business Machines Corporation\",\"2\":\"11568\"},{\"1\":\"Samsung Electronics Co., Ltd.\",\"2\":\"8415\"},{\"1\":\"QUALCOMM Incorporated\",\"2\":\"7449\"},{\"1\":\"Microsoft Corporation\",\"2\":\"5487\"},{\"1\":\"Google Inc.\",\"2\":\"4958\"},{\"1\":\"Canon Kabushiki Kaisha\",\"2\":\"4567\"},{\"1\":\"Sony Corporation\",\"2\":\"3954\"},{\"1\":\"Apple Inc.\",\"2\":\"3952\"},{\"1\":\"Telefonaktiebolaget LM Ericsson (Publ)\",\"2\":\"3347\"},{\"1\":\"Intel Corporation\",\"2\":\"3085\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n# Question 3 \n## Innovation in Tech: What is the most innovative tech sector? For the top 10 companies (worldwide) with the most patents, what are the top 5 USPTO tech main classes?\n\n\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-6_c22b67f32ec234b46a507d76fd6ba4c6'}\n\n```{.r .cell-code}\n# Execution halting because of memory issues. Error is attached below\n# Error: vector memory exhausted (limit reached?)\n\n# res_tbl <- merge(uspc, final_data)\n# \n# top_organizations <- top10$organization\n# \n# setkey(res_tbl, 'organization')\n# \n# res_tbl[organization %in% top_organizations, .N, mainclass_id][order(-N)][1:5]\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}